#!/bin/sh

# shellcheck disable=SC1091
. /usr/sbin/resin-vars

SUPERVISOR_IMAGE_ID=$(balena inspect --format='{{.Id}}' "$SUPERVISOR_IMAGE:$SUPERVISOR_TAG")
SUPERVISOR_CONTAINER_IMAGE_ID=$(balena inspect --format='{{.Image}}' resin_supervisor || echo "")

runSupervisor() {
    # If self-signed root CA exists, add the CA for the specified registry
    RESIN_DECODED_ROOT_CA=$(if [ ! -z "${RESIN_ROOT_CA}" ]; then echo "${RESIN_ROOT_CA}" | base64 -d -w0; fi)
    if [ ! -z "${RESIN_DECODED_ROOT_CA}" ]; then
        CERT_DIR="/mnt/state/root-overlay/etc/docker/certs.d/${REGISTRY_ENDPOINT}"
        mkdir -p "${CERT_DIR}"
        echo "${RESIN_DECODED_ROOT_CA}" > "${CERT_DIR}/ca.crt"
    fi

    balena rm --force resin_supervisor || true
    balena run --privileged --name resin_supervisor \
        --net=host \
        -v /var/run/balena.sock:/var/run/balena.sock \
        -v "$CONFIG_PATH:/boot/config.json"  \
        -v /mnt/data/apps.json:/boot/apps.json \
        -v /resin-data/resin-supervisor:/data \
        -v /proc/net/fib_trie:/mnt/fib_trie \
        -v /var/log/supervisor-log:/var/log \
        -v /:/mnt/root \
        -e DOCKER_ROOT=/mnt/root/var/lib/docker \
        -e DOCKER_SOCKET=/var/run/balena.sock \
        -e "BOOT_MOUNTPOINT=$BOOT_MOUNTPOINT" \
        -e "API_ENDPOINT=$API_ENDPOINT" \
        -e "REGISTRY_ENDPOINT=$REGISTRY_ENDPOINT" \
        -e "PUBNUB_SUBSCRIBE_KEY=$PUBNUB_SUBSCRIBE_KEY" \
        -e "PUBNUB_PUBLISH_KEY=$PUBNUB_PUBLISH_KEY" \
        -e "MIXPANEL_TOKEN=$MIXPANEL_TOKEN" \
        -e "DELTA_ENDPOINT=$DELTA_ENDPOINT" \
        -e "LED_FILE=${LED_FILE}" \
        -e "LISTEN_PORT=$LISTEN_PORT" \
        -e "SUPERVISOR_IMAGE=${SUPERVISOR_IMAGE}:${SUPERVISOR_TAG}" \
        -e "RESIN_ROOT_CA=$RESIN_DECODED_ROOT_CA" \
        -e "NODE_EXTRA_CA_CERTS=$(if [ ! -z "${RESIN_ROOT_CA}" ]; then echo "/etc/ssl/certs/resinRootCA.pem"; fi)" \
        "${SUPERVISOR_IMAGE}:${SUPERVISOR_TAG}"
}

if [ -z "$SUPERVISOR_IMAGE_ID" ]; then
    # No supervisor image exists on the device, try to pull it
    systemctl start update-resin-supervisor
elif [ "$SUPERVISOR_IMAGE_ID" = "$SUPERVISOR_CONTAINER_IMAGE_ID" ]; then
    # Supervisor image exists, and the current supervisor container is created from
    balena start --attach resin_supervisor
else
    # No supervisor container exists or there's a different supervisor image to run
    runSupervisor
fi
